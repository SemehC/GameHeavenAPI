// <auto-generated />
using System;
using GameHeavenAPI.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GameHeavenAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ApplicationUserGame", b =>
                {
                    b.Property<int>("GamesId")
                        .HasColumnType("int");

                    b.Property<string>("UsersId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("GamesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("ApplicationUserGame");
                });

            modelBuilder.Entity("GameGamesCart", b =>
                {
                    b.Property<int>("CartsId")
                        .HasColumnType("int");

                    b.Property<int>("GamesId")
                        .HasColumnType("int");

                    b.HasKey("CartsId", "GamesId");

                    b.HasIndex("GamesId");

                    b.ToTable("GameGamesCart");
                });

            modelBuilder.Entity("GameGenre", b =>
                {
                    b.Property<int>("GamesId")
                        .HasColumnType("int");

                    b.Property<int>("GenresId")
                        .HasColumnType("int");

                    b.HasKey("GamesId", "GenresId");

                    b.HasIndex("GenresId");

                    b.ToTable("GameGenre");
                });

            modelBuilder.Entity("GameHeavenAPI.Entities.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoverPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FacebookLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstagramLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProfilePicturePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TwitterLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("GameHeavenAPI.Entities.Developer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CoverPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacebookLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GameId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("JoinDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TwitterLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("WebsiteLink")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("UserId");

                    b.ToTable("Developers");
                });

            modelBuilder.Entity("GameHeavenAPI.Entities.DirectXVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DirectXVersions");
                });

            modelBuilder.Entity("GameHeavenAPI.Entities.Franchise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CoverPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Franchises");
                });

            modelBuilder.Entity("GameHeavenAPI.Entities.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<string>("CoverPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<int?>("FranchiseId")
                        .HasColumnType("int");

                    b.Property<string>("ImagesPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MinimumSystemRequirementsId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("PublisherId")
                        .HasColumnType("int");

                    b.Property<int?>("RecommendedSystemRequirementsId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("VideosPath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FranchiseId");

                    b.HasIndex("MinimumSystemRequirementsId");

                    b.HasIndex("PublisherId");

                    b.HasIndex("RecommendedSystemRequirementsId");

                    b.HasIndex("StatusId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("GameHeavenAPI.Entities.GamesCart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("GamesCarts");
                });

            modelBuilder.Entity("GameHeavenAPI.Entities.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("GameHeavenAPI.Entities.MinimumSystemRequirements", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdditionalNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CPUId")
                        .HasColumnType("int");

                    b.Property<int?>("DirectXId")
                        .HasColumnType("int");

                    b.Property<int?>("GPUId")
                        .HasColumnType("int");

                    b.Property<int?>("OsId")
                        .HasColumnType("int");

                    b.Property<int>("Ram")
                        .HasColumnType("int");

                    b.Property<int>("Storage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CPUId");

                    b.HasIndex("DirectXId");

                    b.HasIndex("GPUId");

                    b.HasIndex("OsId");

                    b.ToTable("MinimumSystemRequirements");
                });

            modelBuilder.Entity("GameHeavenAPI.Entities.Os", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Oses");
                });

            modelBuilder.Entity("GameHeavenAPI.Entities.PCBuild", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PCSpecificationsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PCSpecificationsId");

                    b.ToTable("PCBuilds");
                });

            modelBuilder.Entity("GameHeavenAPI.Entities.PCSpecifications", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CPUId")
                        .HasColumnType("int");

                    b.Property<int?>("CaseId")
                        .HasColumnType("int");

                    b.Property<int?>("CoolerId")
                        .HasColumnType("int");

                    b.Property<int?>("GPUId")
                        .HasColumnType("int");

                    b.Property<int?>("MemoryId")
                        .HasColumnType("int");

                    b.Property<int?>("MotherBoardId")
                        .HasColumnType("int");

                    b.Property<int?>("PowerSupplyId")
                        .HasColumnType("int");

                    b.Property<int?>("StorageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CPUId");

                    b.HasIndex("CaseId");

                    b.HasIndex("CoolerId");

                    b.HasIndex("GPUId");

                    b.HasIndex("MemoryId");

                    b.HasIndex("MotherBoardId");

                    b.HasIndex("PowerSupplyId");

                    b.HasIndex("StorageId");

                    b.ToTable("PCSpecifications");
                });

            modelBuilder.Entity("GameHeavenAPI.Entities.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Paid")
                        .HasColumnType("bit");

                    b.Property<string>("PayerId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PaymentId");

                    b.HasIndex("PayerId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("GameHeavenAPI.Entities.PcPart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PcPartsCartId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PcPartsCartId");

                    b.ToTable("PcParts");

                    b.HasDiscriminator<string>("Discriminator").HasValue("PcPart");
                });

            modelBuilder.Entity("GameHeavenAPI.Entities.PcPartsCart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("PcPartsCarts");
                });

            modelBuilder.Entity("GameHeavenAPI.Entities.Platform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GameId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("Platforms");
                });

            modelBuilder.Entity("GameHeavenAPI.Entities.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CoverPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacebookLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("JoinDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TwitterLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("WebsiteLink")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Publishers");
                });

            modelBuilder.Entity("GameHeavenAPI.Entities.RecommendedSystemRequirements", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdditionalNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CPUId")
                        .HasColumnType("int");

                    b.Property<int?>("DirectXId")
                        .HasColumnType("int");

                    b.Property<int?>("GPUId")
                        .HasColumnType("int");

                    b.Property<int?>("OsId")
                        .HasColumnType("int");

                    b.Property<int>("Ram")
                        .HasColumnType("int");

                    b.Property<int>("Storage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CPUId");

                    b.HasIndex("DirectXId");

                    b.HasIndex("GPUId");

                    b.HasIndex("OsId");

                    b.ToTable("RecommendedSystemRequirements");
                });

            modelBuilder.Entity("GameHeavenAPI.Entities.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("GamePayment", b =>
                {
                    b.Property<int>("GamesId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentsPaymentId")
                        .HasColumnType("int");

                    b.HasKey("GamesId", "PaymentsPaymentId");

                    b.HasIndex("PaymentsPaymentId");

                    b.ToTable("GamePayment");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("GameHeavenAPI.Entities.CPU", b =>
                {
                    b.HasBaseType("GameHeavenAPI.Entities.PcPart");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CPU_Description");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CPU_Name");

                    b.Property<double>("Price")
                        .HasColumnType("float")
                        .HasColumnName("CPU_Price");

                    b.HasDiscriminator().HasValue("CPU");
                });

            modelBuilder.Entity("GameHeavenAPI.Entities.Case", b =>
                {
                    b.HasBaseType("GameHeavenAPI.Entities.PcPart");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Case_Description");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Case_Name");

                    b.Property<double>("Price")
                        .HasColumnType("float")
                        .HasColumnName("Case_Price");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Case");
                });

            modelBuilder.Entity("GameHeavenAPI.Entities.Cooler", b =>
                {
                    b.HasBaseType("GameHeavenAPI.Entities.PcPart");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Cooler_Description");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Cooler_Name");

                    b.Property<double>("Price")
                        .HasColumnType("float")
                        .HasColumnName("Cooler_Price");

                    b.HasDiscriminator().HasValue("Cooler");
                });

            modelBuilder.Entity("GameHeavenAPI.Entities.GPU", b =>
                {
                    b.HasBaseType("GameHeavenAPI.Entities.PcPart");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("GPU_Description");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("GPU_Name");

                    b.Property<double>("Price")
                        .HasColumnType("float")
                        .HasColumnName("GPU_Price");

                    b.HasDiscriminator().HasValue("GPU");
                });

            modelBuilder.Entity("GameHeavenAPI.Entities.Memory", b =>
                {
                    b.HasBaseType("GameHeavenAPI.Entities.PcPart");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Memory_Description");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Memory_Name");

                    b.Property<double>("Price")
                        .HasColumnType("float")
                        .HasColumnName("Memory_Price");

                    b.HasDiscriminator().HasValue("Memory");
                });

            modelBuilder.Entity("GameHeavenAPI.Entities.MotherBoard", b =>
                {
                    b.HasBaseType("GameHeavenAPI.Entities.PcPart");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasDiscriminator().HasValue("MotherBoard");
                });

            modelBuilder.Entity("GameHeavenAPI.Entities.PowerSupply", b =>
                {
                    b.HasBaseType("GameHeavenAPI.Entities.PcPart");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PowerSupply_Description");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PowerSupply_Name");

                    b.Property<double>("Price")
                        .HasColumnType("float")
                        .HasColumnName("PowerSupply_Price");

                    b.Property<int>("Wattage")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("PowerSupply");
                });

            modelBuilder.Entity("GameHeavenAPI.Entities.Storage", b =>
                {
                    b.HasBaseType("GameHeavenAPI.Entities.PcPart");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Storage_Description");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Storage_Name");

                    b.Property<double>("Price")
                        .HasColumnType("float")
                        .HasColumnName("Storage_Price");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Storage");
                });

            modelBuilder.Entity("ApplicationUserGame", b =>
                {
                    b.HasOne("GameHeavenAPI.Entities.Game", null)
                        .WithMany()
                        .HasForeignKey("GamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameHeavenAPI.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GameGamesCart", b =>
                {
                    b.HasOne("GameHeavenAPI.Entities.GamesCart", null)
                        .WithMany()
                        .HasForeignKey("CartsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameHeavenAPI.Entities.Game", null)
                        .WithMany()
                        .HasForeignKey("GamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GameGenre", b =>
                {
                    b.HasOne("GameHeavenAPI.Entities.Game", null)
                        .WithMany()
                        .HasForeignKey("GamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameHeavenAPI.Entities.Genre", null)
                        .WithMany()
                        .HasForeignKey("GenresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GameHeavenAPI.Entities.Developer", b =>
                {
                    b.HasOne("GameHeavenAPI.Entities.Game", null)
                        .WithMany("Developers")
                        .HasForeignKey("GameId");

                    b.HasOne("GameHeavenAPI.Entities.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GameHeavenAPI.Entities.Game", b =>
                {
                    b.HasOne("GameHeavenAPI.Entities.Franchise", "Franchise")
                        .WithMany()
                        .HasForeignKey("FranchiseId");

                    b.HasOne("GameHeavenAPI.Entities.MinimumSystemRequirements", "MinimumSystemRequirements")
                        .WithMany()
                        .HasForeignKey("MinimumSystemRequirementsId");

                    b.HasOne("GameHeavenAPI.Entities.Publisher", "Publisher")
                        .WithMany()
                        .HasForeignKey("PublisherId");

                    b.HasOne("GameHeavenAPI.Entities.RecommendedSystemRequirements", "RecommendedSystemRequirements")
                        .WithMany()
                        .HasForeignKey("RecommendedSystemRequirementsId");

                    b.HasOne("GameHeavenAPI.Entities.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Franchise");

                    b.Navigation("MinimumSystemRequirements");

                    b.Navigation("Publisher");

                    b.Navigation("RecommendedSystemRequirements");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("GameHeavenAPI.Entities.GamesCart", b =>
                {
                    b.HasOne("GameHeavenAPI.Entities.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GameHeavenAPI.Entities.MinimumSystemRequirements", b =>
                {
                    b.HasOne("GameHeavenAPI.Entities.CPU", "CPU")
                        .WithMany()
                        .HasForeignKey("CPUId");

                    b.HasOne("GameHeavenAPI.Entities.DirectXVersion", "DirectX")
                        .WithMany()
                        .HasForeignKey("DirectXId");

                    b.HasOne("GameHeavenAPI.Entities.GPU", "GPU")
                        .WithMany()
                        .HasForeignKey("GPUId");

                    b.HasOne("GameHeavenAPI.Entities.Os", "Os")
                        .WithMany()
                        .HasForeignKey("OsId");

                    b.Navigation("CPU");

                    b.Navigation("DirectX");

                    b.Navigation("GPU");

                    b.Navigation("Os");
                });

            modelBuilder.Entity("GameHeavenAPI.Entities.PCBuild", b =>
                {
                    b.HasOne("GameHeavenAPI.Entities.PCSpecifications", "PCSpecifications")
                        .WithMany()
                        .HasForeignKey("PCSpecificationsId");

                    b.Navigation("PCSpecifications");
                });

            modelBuilder.Entity("GameHeavenAPI.Entities.PCSpecifications", b =>
                {
                    b.HasOne("GameHeavenAPI.Entities.CPU", "CPU")
                        .WithMany()
                        .HasForeignKey("CPUId");

                    b.HasOne("GameHeavenAPI.Entities.Case", "Case")
                        .WithMany()
                        .HasForeignKey("CaseId");

                    b.HasOne("GameHeavenAPI.Entities.Cooler", "Cooler")
                        .WithMany()
                        .HasForeignKey("CoolerId");

                    b.HasOne("GameHeavenAPI.Entities.GPU", "GPU")
                        .WithMany()
                        .HasForeignKey("GPUId");

                    b.HasOne("GameHeavenAPI.Entities.Memory", "Memory")
                        .WithMany()
                        .HasForeignKey("MemoryId");

                    b.HasOne("GameHeavenAPI.Entities.MotherBoard", "MotherBoard")
                        .WithMany()
                        .HasForeignKey("MotherBoardId");

                    b.HasOne("GameHeavenAPI.Entities.PowerSupply", "PowerSupply")
                        .WithMany()
                        .HasForeignKey("PowerSupplyId");

                    b.HasOne("GameHeavenAPI.Entities.Storage", "Storage")
                        .WithMany()
                        .HasForeignKey("StorageId");

                    b.Navigation("Case");

                    b.Navigation("Cooler");

                    b.Navigation("CPU");

                    b.Navigation("GPU");

                    b.Navigation("Memory");

                    b.Navigation("MotherBoard");

                    b.Navigation("PowerSupply");

                    b.Navigation("Storage");
                });

            modelBuilder.Entity("GameHeavenAPI.Entities.Payment", b =>
                {
                    b.HasOne("GameHeavenAPI.Entities.ApplicationUser", "Payer")
                        .WithMany()
                        .HasForeignKey("PayerId");

                    b.Navigation("Payer");
                });

            modelBuilder.Entity("GameHeavenAPI.Entities.PcPart", b =>
                {
                    b.HasOne("GameHeavenAPI.Entities.PcPartsCart", null)
                        .WithMany("PcParts")
                        .HasForeignKey("PcPartsCartId");
                });

            modelBuilder.Entity("GameHeavenAPI.Entities.Platform", b =>
                {
                    b.HasOne("GameHeavenAPI.Entities.Game", null)
                        .WithMany("Platforms")
                        .HasForeignKey("GameId");
                });

            modelBuilder.Entity("GameHeavenAPI.Entities.Publisher", b =>
                {
                    b.HasOne("GameHeavenAPI.Entities.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GameHeavenAPI.Entities.RecommendedSystemRequirements", b =>
                {
                    b.HasOne("GameHeavenAPI.Entities.CPU", "CPU")
                        .WithMany()
                        .HasForeignKey("CPUId");

                    b.HasOne("GameHeavenAPI.Entities.DirectXVersion", "DirectX")
                        .WithMany()
                        .HasForeignKey("DirectXId");

                    b.HasOne("GameHeavenAPI.Entities.GPU", "GPU")
                        .WithMany()
                        .HasForeignKey("GPUId");

                    b.HasOne("GameHeavenAPI.Entities.Os", "Os")
                        .WithMany()
                        .HasForeignKey("OsId");

                    b.Navigation("CPU");

                    b.Navigation("DirectX");

                    b.Navigation("GPU");

                    b.Navigation("Os");
                });

            modelBuilder.Entity("GamePayment", b =>
                {
                    b.HasOne("GameHeavenAPI.Entities.Game", null)
                        .WithMany()
                        .HasForeignKey("GamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameHeavenAPI.Entities.Payment", null)
                        .WithMany()
                        .HasForeignKey("PaymentsPaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("GameHeavenAPI.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("GameHeavenAPI.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameHeavenAPI.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("GameHeavenAPI.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GameHeavenAPI.Entities.Game", b =>
                {
                    b.Navigation("Developers");

                    b.Navigation("Platforms");
                });

            modelBuilder.Entity("GameHeavenAPI.Entities.PcPartsCart", b =>
                {
                    b.Navigation("PcParts");
                });
#pragma warning restore 612, 618
        }
    }
}
